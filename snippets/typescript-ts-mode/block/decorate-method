# -*- mode: snippet; require-final-newline: nil -*-
# name: decorate method
# group: es6
# --
export function $0() {
  return (target: any, key: string | symbol, descriptor: TypedPropertyDescriptor<any>) => {
    const methodRef = descriptor.value;
    const methodDecorated = async function (this: any, ...args: any[]) {
      // TODO: impl logic
      return await methodRef.apply(this, args);
    };

    Object.setPrototypeOf(methodDecorated, methodRef);
    Object.defineProperty(methodDecorated, \'name\', {
      value: key.toString(),
      writable: false,
    });
    descriptor.value = methodDecorated;
  };
}