# -*- mode: snippet -*-
# name : nest main
# group : @nestjs/common
# --

import { Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { FastifyAdapter, NestFastifyApplication } from '@nestjs/platform-fastify';
import { fastify } from 'fastify';
import { AppModule } from './AppModule';

async function bootstrap(port: string) {
  const fastifyInstance = fastify();
  const logger = new Logger();
  const app = await NestFactory.create<NestFastifyApplication>(AppModule, new FastifyAdapter(fastifyInstance), {
    logger,
  });
  app.enableShutdownHooks();

  await app.listen(port, '0.0.0.0', (err: Error, address: string) => {
    if (err) {
      console.error(err);
      process.exit(1);
    }

    console.log(`[${process.pid}] Listen => ${address}`);
  });
}

bootstrap('8080')
  .then(() => {
    console.log(`[${process.pid}] Invoked bootstrap`);
  })
  .catch(error => {
    console.log(error);
  });
